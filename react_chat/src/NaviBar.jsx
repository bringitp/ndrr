import React, { useState ,useEffect} from 'react';
import { Drawer, List, ListItem, ListItemText, Divider, Button } from '@mui/material';
import IconsGallery from './IconsGallery';
import UserProfileModal from './UserProfileModal';
import { useKeycloak } from '@react-keycloak/web'; // useKeycloak „Éï„ÉÉ„ÇØ„Çí„Ç§„É≥„Éù„Éº„Éà

const NaviBar = () => {
  const dummyData = ['üè†', '‚öô', 'üîå'];
  const [isIconsGalleryModalOpen, setIconsGalleryModalOpen] = useState(false);
  const [isIconsUserProfileModalOpen, setIconsUserProfileModalOpen] = useState(false);
  const { keycloak, initialized } = useKeycloak(); // useKeycloak „Éï„ÉÉ„ÇØ„Çí‰ΩøÁî®
  const [userToken, setUserToken] = useState(null); // „Éà„Éº„ÇØ„É≥„Çístate„Å®„Åó„Å¶ÁÆ°ÁêÜ




  const handleUserProfileModalOpenModal = () => {
    // Keycloak„Åã„ÇâÂèñÂæó„Åó„Åü„Éà„Éº„ÇØ„É≥„ÇíÊ∏°„Åô
      setIconsUserProfileModalOpen(true);
  };

  const handleUserProfileModalCloseModal = () => {
    setIconsUserProfileModalOpen(false);
  };

  const handleIconGalleryOpenModal = () => {
    setIconsGalleryModalOpen(true);
  };

  const handleIconGalleryCloseModal = () => {
    setIconsGalleryModalOpen(false);
  };

  const handleLogout = () => {
    keycloak.logout(); // Keycloak„Åã„Çâ„É≠„Ç∞„Ç¢„Ç¶„Éà
  };




  return (
    <div>
      <Drawer variant="permanent" anchor="left">
        <List>
      {/* „É¢„Éº„ÉÄ„É´„Çí„Ç¢„Ç§„Ç≥„É≥„Åå„ÇØ„É™„ÉÉ„ÇØ„Åï„Çå„Åü„Å®„Åç„Å´Ë°®Á§∫ */}
      {isIconsGalleryModalOpen && (
        <IconsGallery onClose={handleIconGalleryCloseModal} />
      )}

      {isIconsUserProfileModalOpen && (
        <UserProfileModal 
         onClose={handleUserProfileModalCloseModal} 
         userToken={userToken} // „Éà„Éº„ÇØ„É≥„ÇíUserProfileModal„Å´Ê∏°„Åô
         />
      )}

          {initialized && keycloak.authenticated ? ( // Keycloak „ÅåÂàùÊúüÂåñ„Åï„Çå„Å¶„Åä„Çä„ÄÅ„É¶„Éº„Ç∂„Éº„ÅåË™çË®ºÊ∏à„Åø„Åã„Å©„ÅÜ„Åã„Çí„ÉÅ„Çß„ÉÉ„ÇØ
            dummyData.map((item, index) => (
              <ListItem
                button
                key={index}
                onClick={() => {
                  if (item === 'üè†') {
                    handleUserProfileModalOpenModal();
                    setUserToken(keycloak.token);
                  }
                  if (item === '‚öô') {
                    handleIconGalleryOpenModal();
                    setUserToken(keycloak.token);
                  }
                  if (item === 'üîå') {
                    handleLogout(); // üîå„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Åü„Çâ„É≠„Ç∞„Ç¢„Ç¶„Éà
                    setUserToken(null);
                  }
                }}
              >
                <ListItemText primary={item} />
              </ListItem>
            ))
          ) : (
<Button
  onClick={() => keycloak.login()}
  style={{
    width: '15px',
    fontFamily: '"Material Symbols Outlined", sans-serif', // Google Fonts„ÅßËøΩÂä†„Åó„Åü„Éï„Ç©„É≥„Éà„Éï„Ç°„Éü„É™„Éº
    fontSize: '10px'
  }}
>
<span class="material-symbols-outlined">
login
</span>
</Button>
          )}
        </List>
        <Divider />
      </Drawer>
    </div>
  );
};

export default NaviBar;
